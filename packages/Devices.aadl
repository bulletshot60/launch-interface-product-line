package Devices
public
	with ResoluteHelpers, EventHandler, Base_Types;

	device interface_activation_device
		features
			value: out data port Base_Types::Integer;
		annex agree {**
			guarantee "output value is 0 or 1": 0 <= value and value <= 1;
		**};
	end interface_activation_device;
	
	device push_button extends interface_activation_device
		annex agree {**
			guarantee "output value is 0 or 1": 0 <= value and value <= 1;
		**};
	end push_button;
	
	device implementation push_button.impl
		annex agree {**
			eq state: int = prev(if(state = 0) then 1 else 0, 0);
			assert value = state;
		**};
	end push_button.impl;
	
	device toggle extends interface_activation_device
		annex agree {**
			guarantee "output value is 0 or 1": value = 0 or value = 1;
		**};
	end toggle;
	
	device implementation toggle.impl
		annex agree {**
			eq state: int = prev(if(state = 0) then 1 else 0, 0);
			assert value = state;
		**};
	end toggle.impl;
	
	device key_switch extends interface_activation_device
		annex agree {**
			guarantee "output value is 0 or 1": value = 0 or value = 1;
		**};
	end key_switch;
	
	device implementation key_switch.impl
		annex agree {**
			eq state: int = prev(if(state = 0) then 1 else 0, 0);
			assert value = state;
		**};
	end key_switch.impl;
	
	--////////////////////////////////////////////////////////////////
	--================================================================
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	
	device timer
		features
			fire: out event port;
	end timer;
	
	device implementation timer.impl
	end timer.impl;
	
end Devices;